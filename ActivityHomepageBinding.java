// Generated by view binder compiler. Do not edit!
package com.example.usersidelab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.usersidelab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomepageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button application;

  @NonNull
  public final Button comViewbutton;

  @NonNull
  public final Button jobViewbutton;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final Button logout;

  @NonNull
  public final RecyclerView userRecycleView;

  private ActivityHomepageBinding(@NonNull ConstraintLayout rootView, @NonNull Button application,
      @NonNull Button comViewbutton, @NonNull Button jobViewbutton,
      @NonNull LinearLayout linearLayout2, @NonNull Button logout,
      @NonNull RecyclerView userRecycleView) {
    this.rootView = rootView;
    this.application = application;
    this.comViewbutton = comViewbutton;
    this.jobViewbutton = jobViewbutton;
    this.linearLayout2 = linearLayout2;
    this.logout = logout;
    this.userRecycleView = userRecycleView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomepageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomepageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_homepage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomepageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.application;
      Button application = ViewBindings.findChildViewById(rootView, id);
      if (application == null) {
        break missingId;
      }

      id = R.id.comViewbutton;
      Button comViewbutton = ViewBindings.findChildViewById(rootView, id);
      if (comViewbutton == null) {
        break missingId;
      }

      id = R.id.jobViewbutton;
      Button jobViewbutton = ViewBindings.findChildViewById(rootView, id);
      if (jobViewbutton == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.logout;
      Button logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.userRecycleView;
      RecyclerView userRecycleView = ViewBindings.findChildViewById(rootView, id);
      if (userRecycleView == null) {
        break missingId;
      }

      return new ActivityHomepageBinding((ConstraintLayout) rootView, application, comViewbutton,
          jobViewbutton, linearLayout2, logout, userRecycleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
