// Generated by view binder compiler. Do not edit!
package com.example.usersidelab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.usersidelab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityJobviewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button backbutton;

  @NonNull
  public final LinearLayout relativeLayout;

  @NonNull
  public final TextView toolbar;

  @NonNull
  public final RecyclerView userRecycleView;

  private ActivityJobviewBinding(@NonNull ScrollView rootView, @NonNull Button backbutton,
      @NonNull LinearLayout relativeLayout, @NonNull TextView toolbar,
      @NonNull RecyclerView userRecycleView) {
    this.rootView = rootView;
    this.backbutton = backbutton;
    this.relativeLayout = relativeLayout;
    this.toolbar = toolbar;
    this.userRecycleView = userRecycleView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityJobviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityJobviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_jobview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityJobviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbutton;
      Button backbutton = ViewBindings.findChildViewById(rootView, id);
      if (backbutton == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      LinearLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      TextView toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.userRecycleView;
      RecyclerView userRecycleView = ViewBindings.findChildViewById(rootView, id);
      if (userRecycleView == null) {
        break missingId;
      }

      return new ActivityJobviewBinding((ScrollView) rootView, backbutton, relativeLayout, toolbar,
          userRecycleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
