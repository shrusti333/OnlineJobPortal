// Generated by view binder compiler. Do not edit!
package com.example.usersidelab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.usersidelab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCregistrationDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backbutton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button signupbutton;

  @NonNull
  public final EditText signupcemail;

  @NonNull
  public final EditText signupcname;

  @NonNull
  public final EditText signupcpassword;

  @NonNull
  public final TextView textView2;

  private ActivityCregistrationDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button backbutton, @NonNull ImageView imageView, @NonNull Button signupbutton,
      @NonNull EditText signupcemail, @NonNull EditText signupcname,
      @NonNull EditText signupcpassword, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.backbutton = backbutton;
    this.imageView = imageView;
    this.signupbutton = signupbutton;
    this.signupcemail = signupcemail;
    this.signupcname = signupcname;
    this.signupcpassword = signupcpassword;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCregistrationDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCregistrationDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cregistration_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCregistrationDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbutton;
      Button backbutton = ViewBindings.findChildViewById(rootView, id);
      if (backbutton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.signupbutton;
      Button signupbutton = ViewBindings.findChildViewById(rootView, id);
      if (signupbutton == null) {
        break missingId;
      }

      id = R.id.signupcemail;
      EditText signupcemail = ViewBindings.findChildViewById(rootView, id);
      if (signupcemail == null) {
        break missingId;
      }

      id = R.id.signupcname;
      EditText signupcname = ViewBindings.findChildViewById(rootView, id);
      if (signupcname == null) {
        break missingId;
      }

      id = R.id.signupcpassword;
      EditText signupcpassword = ViewBindings.findChildViewById(rootView, id);
      if (signupcpassword == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityCregistrationDetailsBinding((ConstraintLayout) rootView, backbutton,
          imageView, signupbutton, signupcemail, signupcname, signupcpassword, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
