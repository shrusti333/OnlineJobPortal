// Generated by view binder compiler. Do not edit!
package com.example.usersidelab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.usersidelab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EducationdetailitemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final EditText courseNameEditText1;

  @NonNull
  public final EditText courseendyearEditText;

  @NonNull
  public final EditText coursegradesEditText;

  @NonNull
  public final EditText courseinstituteNameEditText;

  @NonNull
  public final EditText coursespecificationEditText;

  @NonNull
  public final EditText coursestartrearEditText;

  @NonNull
  public final EditText graduationEditText;

  private EducationdetailitemBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout container, @NonNull EditText courseNameEditText1,
      @NonNull EditText courseendyearEditText, @NonNull EditText coursegradesEditText,
      @NonNull EditText courseinstituteNameEditText, @NonNull EditText coursespecificationEditText,
      @NonNull EditText coursestartrearEditText, @NonNull EditText graduationEditText) {
    this.rootView = rootView;
    this.container = container;
    this.courseNameEditText1 = courseNameEditText1;
    this.courseendyearEditText = courseendyearEditText;
    this.coursegradesEditText = coursegradesEditText;
    this.courseinstituteNameEditText = courseinstituteNameEditText;
    this.coursespecificationEditText = coursespecificationEditText;
    this.coursestartrearEditText = coursestartrearEditText;
    this.graduationEditText = graduationEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EducationdetailitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EducationdetailitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.educationdetailitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EducationdetailitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.courseNameEditText1;
      EditText courseNameEditText1 = ViewBindings.findChildViewById(rootView, id);
      if (courseNameEditText1 == null) {
        break missingId;
      }

      id = R.id.courseendyearEditText;
      EditText courseendyearEditText = ViewBindings.findChildViewById(rootView, id);
      if (courseendyearEditText == null) {
        break missingId;
      }

      id = R.id.coursegradesEditText;
      EditText coursegradesEditText = ViewBindings.findChildViewById(rootView, id);
      if (coursegradesEditText == null) {
        break missingId;
      }

      id = R.id.courseinstituteNameEditText;
      EditText courseinstituteNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (courseinstituteNameEditText == null) {
        break missingId;
      }

      id = R.id.coursespecificationEditText;
      EditText coursespecificationEditText = ViewBindings.findChildViewById(rootView, id);
      if (coursespecificationEditText == null) {
        break missingId;
      }

      id = R.id.coursestartrearEditText;
      EditText coursestartrearEditText = ViewBindings.findChildViewById(rootView, id);
      if (coursestartrearEditText == null) {
        break missingId;
      }

      id = R.id.graduationEditText;
      EditText graduationEditText = ViewBindings.findChildViewById(rootView, id);
      if (graduationEditText == null) {
        break missingId;
      }

      return new EducationdetailitemBinding((ConstraintLayout) rootView, container,
          courseNameEditText1, courseendyearEditText, coursegradesEditText,
          courseinstituteNameEditText, coursespecificationEditText, coursestartrearEditText,
          graduationEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
